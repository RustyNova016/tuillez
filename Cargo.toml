[package]
name = "tuillez"
version = "0.1.0"
edition = "2021"
rust-version = "1.85.1"

[dependencies]
color-backtrace = {git = "https://github.com/RustyNova016/color-backtrace.git", branch = "example", default-features = false, features = ["use-btparse-crate"]}
indicatif = "0.18.0"
owo-colors = "4.2.1"
tracing-indicatif = "0.3.11"
backtrace = "^0.3.48"
thiserror = "2.0.3"
extend = {version = "1.2.0", optional = true}
chrono = {version = "0.4.42", optional = true}
rust_decimal = {version = "1.36.0", optional = true}
rust_decimal_macros = {version = "1.36.0", optional = true}
humantime = {version = "2.3.0", optional = true}
tracing = "0.1.41"

[features]
default = ["chrono_ext"]
extensions = ["dep:extend"]
chrono_ext = ["dep:chrono", "extensions", "dep:humantime", "dep:rust_decimal", "dep:rust_decimal_macros"]

[lints.clippy]
#pedantic = "deny"
#nursery = "deny"
#perf = "warn"
#cargo = "warn"

# Applied
enum_glob_use = { level = "deny", priority = 1 }
semicolon_if_nothing_returned = { level = "warn", priority = 1 }
use_self = { level = "warn", priority = 1 }
or_fun_call = { level = "warn", priority = 1 }
match_same_arms = { level = "warn", priority = 1 }
manual_string_new = { level = "warn", priority = 1 }
doc_markdown = { level = "warn", priority = 1 }
uninlined_format_args = { level = "warn", priority = 1 }
explicit_iter_loop = { level = "warn", priority = 1 }
allow_attributes = { level = "warn", priority = 1 }
suboptimal_flops= { level = "warn", priority = 1 }


# Won't apply... Yet
must_use_candidate = { level = "allow", priority = 1 }
map_unwrap_or = { level = "allow", priority = 1 }
